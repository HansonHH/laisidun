import LocalizedStrings from 'react-localization'

let localization = new LocalizedStrings({
	en: {
        headerHomeLink: 'Home',
        headerDiscoverLink: 'Discover',
        headerUploadLink: 'Upload',
        headerSettingsLink: 'Settings',
        headerContractLink: 'Contract',
        headerLanguageLink: '‰∏≠',

        homePageHeaderTitle: 'Blockchain-Driven File Storing Platform',
        homePageHeaderButton: 'Know more',
        homePageBannerLeftTitle: 'Searching for shared content worldwide',
        homePageBannerLeftSubTitle: 'and more..',
        homePageBannerRightTitle: 'Storing files permanently for free',
        homePageBannerRightSubTitle: 'and more...',
        homePageInstructionsTitle: 'Instructions',
        homePageInstructionsOneTitle: 'Install Chrome extension wallet',
        homePageInstructionsOneSubTitle: 'Please install extension from Chrome Web Store',
        homePageInstructionsTwoTitle: 'Create a new wallet',
        homePageInstructionsTwoSubTitle: 'Open your wallet extension and create a new wallet',
        homePageInstructionsThreeTitle: 'Ready to go!',
        homePageInstructionsThreeSubTitle: 'Now you are all good to start exploring IPFAS :)',

		discoverPageHeaderTitle: 'Search everything on IPFAS',
		discoverPageHeaderInput: 'Enter anything',
        discoverPageHeaderButton: 'Go!',
        
        uploadPageHeaderTitle: 'Upload everything on IPFAS',
		uploadPageHeaderSubTitle: 'Or simply drop everything here :)',
        uploadPageHeaderButton: 'Upload',
        uploadPageShowMyFilesButton: 'Show my files',

        settingsPageHeaderTitle: 'Connect to IPFS network',
        settingsCardTitle: 'IPFS Node',
        settingsCardStatusSuccess: 'Success',
        settingsCardStatusFailure: 'Fail',
        settingsCardNodeHost: 'Node',
        settingsCardNodeProtocol: 'Protocol',
        settingsCardNodePort: 'Port',
        settingsCardCheckNodeButton: 'Check node',
        settingsCardChangeNodeButton: 'Change node',

		recentButton: 'Recent',
		imageButton: 'Image',
		docButton: 'Doc',
		videoButton: 'Video',
		musicButton: 'Music',
        weLikeButton: 'We like',
        fileNameTh: 'File',
        fileSizeTh: 'Size',
        dateTh: 'Date',
        moreTh: 'More',
        
        infoButton: 'Info',
        shareButton: 'Share',
        tipsButton: 'Tips',
        reportButton: 'Report',
        makePrivateButton: 'Make Private',
        makePublicButton: 'Make Public',


        infoModalTitle: 'Info',
        infoModalFileName: 'File Name',
        infoModalHash: 'Hash',
        infoModalUploader: 'Uploader',
        infoModalCloseButton: 'Close',
        shareModalTitle: 'Share',
        shareModalLink: 'Link',
        shareModalCloseButton: 'Close',
        reportModalTitle: 'Report',
        reportModalLabel: 'Reason',        
        reportModalSubmitButton: 'Submit',
        reportModalCloseButton: 'Close',
        nodeModalTitle: 'Change node',
        nodeModalHost: 'Node',
        nodeModalPort: 'Port',
        nodeModalProtocol: 'Protocol',
        nodeModalSaveButton: 'Save',
        nodeModalCloseButton: 'Close',

        notificationFetchFilesSuccess: 'Successfully fetched stored files üëå',
        notificationFetchFilesWarn: 'No result found ‚ö†Ô∏è',
        notificationFetchFilesFailure: 'Failed to get stored files ‚ö†Ô∏è',

        notificationUploadFileInProgress: 'Upload in progress, please wait...',
        notificationUploadFileDone: 'Upload done üëå',
        notificationUploadFileSuccess: 'Successfully uploaded file üëå',
        notificationUploadFileTooLargeFailure: 'File is too large (supported < 100 MB) ‚ö†Ô∏è',
        notificationUploadFileExistWarn: 'File alread exists or something went wrong ‚ö†Ô∏è',
        notificationUploadFileOneAtATimeWarn: 'Please upload one file at a time ‚ö†Ô∏è',
        notificationUploadFileFailure: 'Failed to upload file ‚ö†Ô∏è',

        notificationSetVisibilitySuccess: 'Successfuly set file visibility üëå',
        notificationSetVisibilityFailure: 'Failed set file visibility ‚ö†Ô∏è',

        notificationPayTipsSuccess: 'Successfully paid tips üëå',
        notificationPayTipsFailure: 'Failed to pay tips ‚ö†Ô∏è',
        notificationReportFileSuccess: 'Successfully reported file üëå',
        notificationReportFileFailure: 'Failed to report file ‚ö†Ô∏è',
        notificationReportFileEmptyReason: 'Please input reason, thanks',

        notificationInstallWalletWarn: 'Please install Nebulas Chrome wallet extension ‚ö†Ô∏è',

        notificationCheckNodeSuccess: 'Node status is healthy üëå',
        notificationCheckNodeFailure: 'Ops! Something went wrong ‚ö†Ô∏è',

        timelineQ22018PlanTitle: 'Dawn release',
        timelineQ22018PlanLocation: 'Stockholm, Sweden',
        timelineQ22018PlanOne: 'Support uploading, sharing files and paying tips to files uploaders',
        timelineQ32018PlanTitle: 'Diamond release',
        timelineQ32018PlanLocation: 'Stockholm, Sweden',
        timelineQ22018PlanTwo: 'Mechanism for content censorship',
        timelineQ32018PlanOne: 'Support file encryption to secure shared content',
        timelineQ32018PlanTwo: 'Integrate with social media',
        timelineQ42018PPlanTitle: 'Coming soon'
	},
	cn: {
        headerHomeLink: '‰∏ªÈ°µ',
        headerDiscoverLink: 'ÂèëÁé∞',
        headerUploadLink: '‰∏ä‰º†',
        headerSettingsLink: 'ËÆæÁΩÆ',
        headerContractLink: 'ÂêàÁ∫¶',
        headerLanguageLink: 'EN',

        homePageHeaderTitle: '‰∏Ä‰∏™Âå∫ÂùóÈìæÈ©±Âä®ÁöÑÂÖ±‰∫´ÁΩëÁõò',
        homePageHeaderButton: '‰∫ÜËß£Êõ¥Â§ö',
        homePageBannerLeftTitle: 'ÊêúÁ¥¢Èìæ‰∏äÊâÄÊúâÂÖ±‰∫´ÂÜÖÂÆπ',
        homePageBannerLeftSubTitle: 'Êõ¥Â§ö...',
        homePageBannerRightTitle: 'Ê∞∏‰πÖÂÖçË¥πÂ≠òÂÇ®Êñá‰ª∂',
        homePageBannerRightSubTitle: 'Êõ¥Â§ö...',
        homePageInstructionsTitle: '‰ΩøÁî®Ê≠•È™§',
        homePageInstructionsOneTitle: 'ÂÆâË£ÖChromeÈí±ÂåÖÊèí‰ª∂',
        homePageInstructionsOneSubTitle: 'ËØ∑‰ªéChrome Web StoreÂÆâË£ÖÊèí‰ª∂',
        homePageInstructionsTwoTitle: 'ÂàõÂª∫Êñ∞Èí±ÂåÖ',
        homePageInstructionsTwoSubTitle: 'ÊâìÂºÄÊèí‰ª∂Âπ∂ÂàõÂª∫‰∏Ä‰∏™Êñ∞Èí±ÂåÖ',
        homePageInstructionsThreeTitle: 'ÂáÜÂ§áÂºÄÂßãÂêß',
        homePageInstructionsThreeSubTitle: 'ËØ∑ÂºÄÂßã‰ΩøÁî®IPFAS :)',

		discoverPageHeaderTitle: 'ÊêúÁ¥¢Êï¥‰∏™IPFAS',
		discoverPageHeaderInput: 'ËæìÂÖ•ÂÜÖÂÆπ',
        discoverPageHeaderButton: 'ËØïËØïÊâãÊ∞î!',
        
        uploadPageHeaderTitle: '‰∏ä‰º†‰ªªÊÑèÊñá‰ª∂Âà∞IPFAS',
		uploadPageHeaderSubTitle: 'ÊàñËÄÖÊãñÂä®Êñá‰ª∂Âà∞ËøôÈáå :)',
        uploadPageHeaderButton: '‰∏ä‰º†',
        uploadPageShowMyFilesButton: 'ÊòæÁ§∫ÊàëÁöÑÊñá‰ª∂',

        settingsPageHeaderTitle: 'ËøûÊé•Âà∞IPFSÁΩëÁªú',
        settingsCardTitle: 'IPFSËäÇÁÇπ',
        settingsCardStatusSuccess: 'ËøûÊé•ÊàêÂäü',
        settingsCardStatusFailure: 'ËøûÊé•Â§±Ë¥•',
        settingsCardNodeHost: 'Âú∞ÂùÄ',
        settingsCardNodeProtocol: 'ÂçèËÆÆ',
        settingsCardNodePort: 'Á´ØÂè£',
        settingsCardCheckNodeButton: 'Ê£ÄÊµãËäÇÁÇπ',
        settingsCardChangeNodeButton: 'ÊîπÂèòËäÇÁÇπ',

		recentButton: 'ÊúÄËøë',
		imageButton: 'ÂõæÂÉè',
		docButton: 'ÊñáÊ°£',
		videoButton: 'ËßÜÈ¢ë',
		musicButton: 'Èü≥‰πê',
        weLikeButton: 'Â•ΩÁâ©',
        fileNameTh: 'Êñá‰ª∂',
        fileSizeTh: 'Â§ßÂ∞è',
        dateTh: 'Êó•Êúü',
        moreTh: 'Êõ¥Â§ö',
        
        infoButton: '‰ø°ÊÅØ',
        shareButton: 'ÂàÜ‰∫´',
        tipsButton: 'ÊâìËµè',
        reportButton: '‰∏æÊä•',
        makePrivateButton: 'ËÆæ‰∏∫ÈöêÁßÅÊñá‰ª∂',
        makePublicButton: 'ËÆæ‰∏∫ÂÖ¨ÂºÄÊñá‰ª∂',

        infoModalTitle: '‰ø°ÊÅØ',
        infoModalFileName: 'Êñá‰ª∂',
        infoModalHash: 'ÂìàÂ∏å',
        infoModalUploader: '‰∏ä‰º†ËÄÖ',
        infoModalCloseButton: 'ÂÖ≥Èó≠',
        shareModalTitle: 'ÂàÜ‰∫´',
        shareModalLink: 'ÈìæÊé•',
        shareModalCloseButton: 'ÂÖ≥Èó≠',
        reportModalTitle: '‰∏æÊä•',
        reportModalLabel: 'ÂéüÂõ†',        
        reportModalSubmitButton: 'Êèê‰∫§',
        reportModalCloseButton: 'ÂÖ≥Èó≠',
        nodeModalTitle: 'ÊîπÂèòËäÇÁÇπ',
        nodeModalHost: 'Âú∞ÂùÄ',
        nodeModalPort: 'Á´ØÂè£',
        nodeModalProtocol: 'ÂçèËÆÆ',
        nodeModalSaveButton: '‰øùÂ≠ò',
        nodeModalCloseButton: 'ÂÖ≥Èó≠',

        notificationFetchFilesSuccess: 'ÊàêÂäüËé∑ÂèñÊñá‰ª∂ üëå',
        notificationFetchFilesWarn: 'Ê≤°ÊúâÊâæÂà∞Êñá‰ª∂ ‚ö†Ô∏è',
        notificationFetchFilesFailure: 'Ëé∑ÂèñÊñá‰ª∂Â§±Ë¥• ‚ö†Ô∏è',

        notificationUploadFileInProgress: 'Êñá‰ª∂Ê≠£Âú®‰∏ä‰º†ÔºåËØ∑Á≠âÂæÖ...',
        notificationUploadFileDone: 'Êñá‰ª∂ÂÆåÊàê‰∏ä‰º† üëå',
        notificationUploadFileSuccess: 'ÊàêÂäü‰∏ä‰º†Êñá‰ª∂ üëå',
        notificationUploadFileTooLargeFailure: 'Êñá‰ª∂Â§™Â§ß (ÊîØÊåÅ < 100 MB) ‚ö†Ô∏è',
        notificationUploadFileExistWarn: 'Êñá‰ª∂Â∑≤Â≠òÂú®ÊàñÂá∫Èîô ‚ö†Ô∏è',
        notificationUploadFileOneAtATimeWarn: 'ËØ∑‰∏ÄÊ¨°‰∏ä‰º†‰∏Ä‰ªΩÊñá‰ª∂ ‚ö†Ô∏è',
        notificationUploadFileFailure: '‰∏ä‰º†Êñá‰ª∂Â§±Ë¥• ‚ö†Ô∏è',

        notificationSetVisibilitySuccess: 'ÊàêÂäüËÆæÁΩÆÊñá‰ª∂ÂÖ¨ÂºÄÊÄß üëå',
        notificationSetVisibilityFailure: 'ËÆæÁΩÆÊñá‰ª∂ÂÖ¨ÂºÄÊÄßÂ§±Ë¥• ‚ö†Ô∏è',

        notificationPayTipsSuccess: 'ÊàêÂäüÊâìËµè üëå',
        notificationPayTipsFailure: 'ÊâìËµèÂ§±Ë¥• ‚ö†Ô∏è',
        notificationReportFileSuccess: 'Êñá‰ª∂Â∑≤‰∏æÊä• üëå',
        notificationReportFileFailure: '‰∏æÊä•Êñá‰ª∂Â§±Ë¥• ‚ö†Ô∏è',
        notificationReportFileEmptyReason: 'ËØ∑Â°´ÂÜô‰∏æÊä•ÂéüÂõ†ÔºåË∞¢Ë∞¢',
        notificationInstallWalletWarn: 'ËØ∑Âú®ÊµèËßàÂô®ÂÆâË£ÖÈí±ÂåÖÊèí‰ª∂ ‚ö†Ô∏è',
        notificationCheckNodeSuccess: 'ËäÇÁÇπÁä∂ÊÄÅÂÅ•Â∫∑ üëå',
        notificationCheckNodeFailure: 'Á≥üÁ≥ïÔºÅÂá∫ÈîôÂï¶ ‚ö†Ô∏è',

        timelineQ22018PlanTitle: 'ÈªéÊòéÂèëÂ∏É',
        timelineQ22018PlanLocation: 'ÊñØÂæ∑Âì•Â∞îÊë©, ÁëûÂÖ∏',
        timelineQ22018PlanOne: 'ÊîØÊåÅ‰∏ä‰º†ÂàÜ‰∫´Êñá‰ª∂ÔºåÊâìËµèÂÜÖÂÆπÂàÜ‰∫´ËÄÖ',
        timelineQ32018PlanTitle: 'ÈíªÁü≥ÂèëÂ∏É',
        timelineQ32018PlanLocation: 'ÊñØÂæ∑Âì•Â∞îÊë©, ÁëûÂÖ∏',
        timelineQ22018PlanTwo: 'Âä†ÂÖ•ÂÜÖÂÆπÂÆ°Êü•Êú∫Âà∂',
        timelineQ32018PlanOne: 'ÊîØÊåÅÂàÜ‰∫´ÂÜÖÂÆπÂä†ÂØÜ',
        timelineQ32018PlanTwo: 'Êé•ÂÖ•Á§æ‰∫§Â™í‰ΩìÂπ≥Âè∞',
        timelineQ42018PPlanTitle: 'ËÆ°Âàí‰∏≠'
	},
})

export { localization }
